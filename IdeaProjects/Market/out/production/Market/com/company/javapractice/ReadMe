Készíts egy gyümölcs nevű osztályt, mely a következő adattagokkal rendelkezik ár, szin (ez csak zöld, sárga, és piros lehet), fajta. Mindhárom adattagra legyen igaz az, hogy direkt nem elérhető részét képzik az osztálynak, viszont ha el szeretnénk őket érni akkor metódusokon keresztül ezt megtehetjük! Legyen kiíratható a gyümölcs! Készíts egy vásárló nevü osztályt is, melyben egy vásárlót reprezentálunk! A  vásárló adattagjai a következőek, egy kosár amelyekbe gyümölcsöket kíván tenni a vásárló, egy összeg, amelyben a vásárló pénze van eltárolva. A vásárló kosarának méretét a felhasználó szabja meg parancssori argumentumként és a pénzét is.  Hasonlóan az előző feladathoz, itt is csak metódusokon keresztül lehessen elérni az attribútumokat! A vásárlóról is lehessen információt kérni! A vásárlót el kell látni egy vásárol() metódussal amellyel gyümölcsöket tud vásárolni. A metódus a következőképp működik: a vásárló akkor és csak akkor vesz meg egy gyümölcsöt, ha a.) van elegendő pénze b.) a gyümölcs színe zöld. Ha nincs elegendő pénzünk akkor erről tájékoztassuk a felhasználót a következő szöveggel: “sajnos nem tudjuk megvenni a megadott gyümölcsöt (itt információt kérünk egy adott gyümölcsről)”. Ha nem zöld a gyümölcs akkor pedig kérjünk elnézést az eladótól és mondjuk meg neki, hogy mi csak zöld gyümölcsöt szeretnénk vásárolni.

A Vásárló osztályból származzon egy szuperNagyi osztály mely egy attribútummal rendelkezik a vásárló attributúmain kívűl, amivel azt szeretnénk jelezni, hogy a nagymama rendelkezik-e az alkudozás képességgel. Ez véletlen legyen, azaz random számmal döntsük el egy nagyiról, hogy alkudozó vagy sem. Ezen felül a nagyi mivel már nyugdíjas a vásárlóhoz képest kevesebb pénzzel rendelkezik, a parancssorban megadott paraméter 80%-val. A nagyi vásárol() metódusát definiáljuk felül mégpedig úgy, hogy Ő megveszi a sárga gyümölcsöket is és ha alkudozásra hajlamos, akkor alkudozik is, mégpedig minden vásárlás esetén 75%-os sikerrel. Ha sikerült az alkudozás, akkor az árból engedhetünk 10%-ot. A nagyinak legyen egy megmondtam() metódusa is, melyet meghívunk minden sikeres alkudozás után, amely egyszerűen kiírja a képernyőre, hogy “ugye unokám megmondtam, hogy ennél az árusnál lehet alkudni…”. Legyen a nagyi is kiiratható, mégpedig úgy, hogy jelezzük azt, hogy szuperNagyiról van szó a kiiratásban, de maradjon meg a vásárló kiiratása is. A vásárló és a szupernagyi legyen egy piac csomagban, míg a gyümölcs a piac csomagon belül egy portéka csomagban.

Hozz létre egy futtatható osztályt a piac csomagon kívűl és egy statikus metódust vasarlas() néven, mely egy gyümölcsökből álló tömbböt (3 elemmel) és egy vásárló esetleg nagyi objektumot vár paraméterül, a metódus térjen vissza az elköltött pénzzel. Járjuk be a gyümölcsöket és vegyük meg őket egy vásárlóval, majd egy nagyival is, majd vonjuk le a konklúziót, hogy megéri-e nagyival menni a piacra, azaz sikerült-e a nagyinknak alkudni vagy sem.  A parancssori argumentumok sorban a következőképpen néznek ki: kosár nagysága, kezdeti pénz, majd a gyümölcsök felsorolva: fajta, szín, ár szerint (legalább 3 gyümölcsöt kapnunk kell, ha annyit nem kapunk térjünk vissza hibaüzenettel)! Hozzunk létre egy vásárló és egy nagyi objektumot, majd egy piacnak nevezett 3 gyümölcsöt tároló tömböt, majd vizsgáljuk meg az előzőekben megfogalmazott feladatot!

véletlenszám generálása legfeljebb 5-ig:

Random randomGenerator = new Random();

int randomInt = randomGenerator.nextInt(5);