Készítsd el a Munkagep absztrakt osztályt és helyezd azt a gep csomagba. Az osztálynak két adattagja legyen protected láthatósággal: suly (egész) és tipus (szöveg). Írj az osztálynak konstruktort, ami az adattagokat a paramétereivel inicializálja, továbbá mindkét adattaghoz készíts gettert. Írd meg csomagon kívül a Szallito interfészt, ami egy szallit() nevű metódust deklarál, aminek egy int típusú paramétere van (ami azt fejezi ki, hogy milyen messzire történik a szállítás), visszatérési értéke egy double (ami pedig azt fejezi ki, hogy mennyi időt vett igénybe a szállítás). A metódus Exception típusú kivételt dobhat.

Készítsd el a Teherauto osztályt a gep csomagban, ami a Munkagep osztályból származik, valamint implementálja a Szallito interfészt. A Teherauto osztályba vedd fel teherbiras (egész) és a megrakodtsag (egész) adattagokat. A Konstruktor az örökölt adattagok mellett a teherbiras-t is inicializálja a paraméterei alapján, és a megrakodtsag-ot állítsa be 0-ra. A szallit() metódust kiszámolja, hogy mennyi ideig tart a rakományt elszállítani. Amennyiben nincs rakomány, vagyis a megrakodtsag 0, dobjon Exception típusú kivételt a „Nincs rakomány" szöveggel, ellenkező esetben állítsa a megrakodtsag-ot 0-ra, majd térjen vissza a távolság és a sebesség hányadosával. A távolság a paraméterben kapott szám, a sebesség pedig a suly + megrakodtsag összeg megszorozva egy 0 és 1 közötti véletlen számmal. Legyen az osztály String-gé alakítható. Definiáld felül az osztály hashCode valamint equals metodusait!

Hozd létre a Markolo osztályt, ami a Munkagep osztályból származik és helyezd a gep csomagba. Az osztálynak legyen egy kanalmeret (egész) privát attribútuma, ezt a konstruktor paramétere alapján inicializálja. Írd meg az osztálynak az atrakod() metódust, ami double visszatérési típussal rendelkezik, és 3 paramétert vár: az első int típusút megmondja, hogy mennyi homokot kell átrakodni, a második szintén int típusú, megmondja, hogy milyen távolságra kell elszállítani, illetve a harmadik egy Teherauto objektum, ami segítségével megtörténik a szállítás. A átrakodás úgy történik, hogy minden egyes lépésben kanalmeret-nyit átrakodunk a Teherauto-ra (levonva a kanálmértet az átrakodandó homokból és hozzáadva azt a Teherauto megrakodtságához), majd miután megtelt a Teherauto (vagyis a megrakodtsága elérte a teherbírását) a Teherauto szallit() metódusával elszállítatjuk a rakományt a második paraméterben kapott távolságra. Ez addig folytatódik ciklikusan, amíg el nem szállítottuk az első paraméterben magadott mennyiségű homokot. A metódus visszatérési értéke az egész átrakodás időtartama, ami a szállítások időtartamának összege valamint kanalazásonként 5 időegység, ha a tipus megegyezik a harmadik paraméterben kapott Teherauto tipusával, egyébként 6 időegység. Legyen az osztály String-gé alakítható. Definiáld felül az osztály hashCode valamint equals metodusait!

Írj futtatható osztályt csomagon kívül, amely a munkagepek.txt fájl tartalma alapján példányosít Markoló és Teherautó objektumokat. A fájl egy sora egy Markolót és egy Teherautót ír le: a „Markolo" szöveg után következik a tipus, a suly és a kanalmeret, a „Teherauto" szöveg után pedig a tipus, a suly és a teherbiras egy-egy szóközzel elválasztva. Példa:

Markolo Volvo 340 10 Teherauto IFA 100 115

Markolo Mercedes 350 15 Teherauto Mercedes 150 160

...

Az egyes sorok alapján létrehozott Markolót és Teherautót helyezd el egy HashMap-ben, ahol a Markoló a kulcs, a Teherautó pedig az érték. A beolvasást követően határozd meg, hogy melyik páros képes a leggyorsabban átrakodni 600 egység homokot 200 egység távolságra a Markolo objektumok atrakod() metódusának meghívásával. Az eredményt írd ki a képernyőre. Az esetleges ki-/bemeneti hibákat és a Teherauto osztály szallit() metódusa által dobott kivételt kapjuk el, és írjunk ki hibaüzeneteket!  Végül szerializáld kia HashMap tartalmát!

Olvasd be a serializált HashMap-t és határozd meg, hány különböző Teherautó és Markoló van!

Hozz létre egy TeherAutoStat osztályt, melyben el tudjuk tárolni, hogy az egyes Teherau típusok milyen teherbírással rendelkeznek. Pl. ha van két IFA Teherautó objektumunk különböző teherbírásokkal (pl 100 és 120 -s teherbírással) akkor az IFA-hoz tároljuk el ezeket az adatokat. (meg kell találni a helyes adatszerkezetet) Írj egy metodust, mely bemenetnek egy Teherauto típust vár (pl. IFA) és visszaadja a hozzá tartozó teherbírásokat! (figyelj a hibakezelésre!)